-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Aimbot Config
local aimSmoothness = 0.15

-- ESP Config
local baseBoxSize = Vector2.new(120, 200)
local cornerLength = 8
local boxColor = Color3.fromRGB(0, 255, 0)
local thickness = 2
local referenceDistance = 20

local chamEnemyColor = Color3.fromRGB(255, 0, 0)
local chamAllyColor = Color3.fromRGB(0, 255, 255)
local chamFillTransparency = 0.75
local chamOutlineTransparency = 0

local holdingRMB = false
local ESPTable = {}
local ChamTable = {}

-- Team check
local function isEnemy(player)
    return player.Team ~= LocalPlayer.Team
end

-- Wall Check
local function isVisible(targetPart)
    local origin = Camera.CFrame.Position
    local direction = (targetPart.Position - origin)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character, targetPart.Parent}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.IgnoreWater = true

    local result = workspace:Raycast(origin, direction, raycastParams)
    return not result or result.Instance:IsDescendantOf(targetPart.Parent)
end

-- Aimbot targeting (only HumanoidRootPart)
local function getClosestTargetPart()
    local closestPart = nil
    local shortestDist = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and isEnemy(player) and player.Character then
            local part = player.Character:FindFirstChild("Head")
            if part and isVisible(part) then
                local screenPos, visible = Camera:WorldToViewportPoint(part.Position)
                if visible then
                    local dist = (Vector2.new(screenPos.X, screenPos.Y) - Camera.ViewportSize / 2).Magnitude
                    if dist < shortestDist then
                        shortestDist = dist
                        closestPart = part
                    end
                end
            end
        end
    end

    return closestPart
end

-- Input for aimbot
UserInputService.InputBegan:Connect(function(input, gpe)
    if input.UserInputType == Enum.UserInputType.MouseButton2 and not gpe then
        holdingRMB = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        holdingRMB = false
    end
end)

-- Drawing lines
local function createLine()
    local line = Drawing.new("Line")
    line.Thickness = thickness
    line.Color = boxColor
    line.Visible = false
    return line
end

local function createESP()
    return {
        tlH = createLine(), tlV = createLine(),
        trH = createLine(), trV = createLine(),
        blH = createLine(), blV = createLine(),
        brH = createLine(), brV = createLine(),
    }
end

local function removeESP(esp)
    for _, line in pairs(esp) do
        line:Remove()
    end
end

local function createChams(player, character)
    if ChamTable[player] then
        ChamTable[player]:Destroy()
    end

    local cham = Instance.new("Highlight")
    cham.Name = "ChamHighlight"
    cham.FillTransparency = chamFillTransparency
    cham.OutlineTransparency = chamOutlineTransparency
    cham.FillColor = chamEnemyColor
    cham.OutlineColor = chamEnemyColor
    cham.Adornee = character
    cham.Parent = game.CoreGui
    ChamTable[player] = cham
end

local function removeChams(player)
    if ChamTable[player] then
        ChamTable[player]:Destroy()
        ChamTable[player] = nil
    end
end

-- Main loop
RunService.RenderStepped:Connect(function()
    -- Aimbot
    if holdingRMB then
        local targetPart = getClosestTargetPart()
        if targetPart then
            local camPos = Camera.CFrame.Position
            local direction = (targetPart.Position - camPos).Unit
            local targetCFrame = CFrame.new(camPos, camPos + direction)
            Camera.CFrame = Camera.CFrame:Lerp(targetCFrame, aimSmoothness)
        end
    end

    -- ESP + Chams
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and isEnemy(player) and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local char = player.Character
            local hrp = char.HumanoidRootPart
            local pos, visible = Camera:WorldToViewportPoint(hrp.Position)

            if not ESPTable[player] then ESPTable[player] = createESP() end
            local esp = ESPTable[player]

            if visible then
                local distance = (Camera.CFrame.Position - hrp.Position).Magnitude
                local scale = referenceDistance / distance
                local boxSize = baseBoxSize * scale
                local x, y, w, h = pos.X, pos.Y, boxSize.X, boxSize.Y

                esp.tlH.From = Vector2.new(x - w/2, y - h/2)
                esp.tlH.To = esp.tlH.From + Vector2.new(cornerLength, 0)
                esp.tlH.Visible = true

                esp.tlV.From = Vector2.new(x - w/2, y - h/2)
                esp.tlV.To = esp.tlV.From + Vector2.new(0, cornerLength)
                esp.tlV.Visible = true

                esp.trH.From = Vector2.new(x + w/2, y - h/2)
                esp.trH.To = esp.trH.From - Vector2.new(cornerLength, 0)
                esp.trH.Visible = true

                esp.trV.From = Vector2.new(x + w/2, y - h/2)
                esp.trV.To = esp.trV.From + Vector2.new(0, cornerLength)
                esp.trV.Visible = true

                esp.blH.From = Vector2.new(x - w/2, y + h/2)
                esp.blH.To = esp.blH.From + Vector2.new(cornerLength, 0)
                esp.blH.Visible = true

                esp.blV.From = Vector2.new(x - w/2, y + h/2)
                esp.blV.To = esp.blV.From - Vector2.new(0, cornerLength)
                esp.blV.Visible = true

                esp.brH.From = Vector2.new(x + w/2, y + h/2)
                esp.brH.To = esp.brH.From - Vector2.new(cornerLength, 0)
                esp.brH.Visible = true

                esp.brV.From = Vector2.new(x + w/2, y + h/2)
                esp.brV.To = esp.brV.From - Vector2.new(0, cornerLength)
                esp.brV.Visible = true
            else
                for _, line in pairs(esp) do
                    line.Visible = false
                end
            end

            if not ChamTable[player] or ChamTable[player].Adornee ~= char then
                createChams(player, char)
            end
        else
            if ESPTable[player] then removeESP(ESPTable[player]) ESPTable[player] = nil end
            removeChams(player)
        end
    end
end)

-- Clean up on leave
Players.PlayerRemoving:Connect(function(player)
    if ESPTable[player] then removeESP(ESPTable[player]) ESPTable[player] = nil end
    removeChams(player)
end)

-- Simple UI label
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DiscordLabel"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 300, 0, 50)
Frame.Position = UDim2.new(0.5, -150, 0, 10)
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 0.5
Frame.Parent = ScreenGui

local DiscordLabel = Instance.new("TextLabel")
DiscordLabel.Size = UDim2.new(1, 0, 1, 0)
DiscordLabel.Position = UDim2.new(0, 0, 0, 0)
DiscordLabel.Text = "Discord: orinix101"
DiscordLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
DiscordLabel.TextSize = 20
DiscordLabel.BackgroundTransparency = 1
DiscordLabel.TextScaled = true
DiscordLabel.Font = Enum.Font.SourceSansBold
DiscordLabel.Parent = Frame
